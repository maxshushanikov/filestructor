name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests, lint, and coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          pip install pytest-cov

      - name: Lint with flake8
        run: flake8 filestructor

      - name: Run tests with coverage
        run: pytest --cov=filestructor --cov-report=term --cov-report=html --cov-report=xml

      - name: Upload HTML coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov

  deploy-pages:
    name: Deploy Docs + Coverage to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install documentation dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocstrings[python] mkdocs-static-i18n pytest-cov

      - name: Build MkDocs site
        run: mkdocs build -d site

      - name: Generate HTML coverage report
        run: pytest --cov=filestructor --cov-report=html

      - name: Move coverage report into docs folder
        run: |
          mkdir -p site/coverage
          cp -r htmlcov/* site/coverage/
          touch site/.nojekyll

      - name: Deploy combined site to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site

  publish:
    name: Publish to PyPI
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
